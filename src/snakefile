# Load the config file at the top
configfile: "snakeconfig.yaml"

out_path     = "Output/"
data_path    = "Data/"
modules_path = "Modules/"
submod_path  = "Modules/Submodules/"

# 1. General Purpose
rule all:
    input:
        [f'{out_path}DE.inc', 
        f'{data_path}Power Grid/municipal_connectivity.nc',
        f"{data_path}Danmarks Statistik/transport_demand.csv",
        f"{out_path}DH.inc",
        f"{out_path}DH_VAR_T.inc"]

rule create_conversion_dictionaries:
    output:
        [f"{submod_path}exo_elec_dem_conversion_dictionaries.pkl",
        f"{submod_path}exo_heat_dem_conversion_dictionaries.pkl"]
    script:
        f"{submod_path}create_conversion_dictionaries.py"
    
rule get_grid_from_Balmorel:
    output:
        f"{data_path}Power Grid/municipal_connectivity.nc"
    script:
        f"{submod_path}get_grid.py"

rule do_clustering:
    input:
        f"{data_path}Power Grid/municipal_connectivity.nc"
    script:
        f"{modules_path}clustering.py"

# 2. Exogenous Electricity Demands
rule format_energinet_data:
    input:
        f"{data_path}Timeseries/ElConsumptionEnerginet2023.csv"
    output:
        f"{data_path}Timeseries/energinet_eldem.nc"
    script:
        f"{modules_path}format_energinet.py"

rule exo_electricity_demand:
    input:
        [f"{submod_path}exo_elec_dem_conversion_dictionaries.pkl", 
        f"{data_path}Timeseries/energinet_eldem.nc",
        f"{modules_path}exo_electricity_demand.py"]
    output:
        [f"{out_path}DE.inc", f"{out_path}DE_VAR_T.inc"]
    shell:
        """
        python {input[2]} --conversion-file={input[0]} --el-dataset={input[1]} --show-difference=False
        """

# 3. Exogenous Heat Demands
rule format_vpdk21_data:
    input:
        expand(f"{data_path}AAU Kommuneplan")
    output:
        [f"{data_path}AAU Kommuneplan/districtheat_exo_heatdem.nc", 
        f"{data_path}AAU Kommuneplan/industry_exo_heatdem.nc"]
    script:
        f"{modules_path}format_vpdk21.py"

rule format_dkstat_industry_data:
    input:
        [r"Data\Danmarks Statistik\Industriforbrug Type.xlsx",
        f"{modules_path}format_dkstat.py"]
    output:
        f"{data_path}Danmarks Statistik/industry_demand.nc"
    shell:
        """
        python {input[1]} --get-industry-demand
        """

rule format_balmorel_data:
    input:
        f"{modules_path}format_balmorel_data.py"
    params:
        model_path=config["balmorel_input"]["model_path"],
        scenario=config["balmorel_input"]["scenario"],
        load_again=config["balmorel_input"]["load_again"]
    output:
        [f"{out_path}DH_VAR_T.inc",
        f"{out_path}INDIVUSERS_DH_VAR_T.inc"]
    shell:
        """
        python {input} --model-path={params.model_path} --scenario={params.scenario} --load-again={params.load_again}
        """

rule exo_heat_demand:
    input:
        [f"{submod_path}exo_heat_dem_conversion_dictionaries.pkl",
        f"{data_path}AAU Kommuneplan/districtheat_exo_heatdem.nc", 
        f"{data_path}AAU Kommuneplan/industry_exo_heatdem.nc",
        f"{data_path}Danmarks Statistik/industry_demand.nc",
        f"{data_path}Timeseries/energinet_eldem.nc"]
    output:
        [f"{submod_path}districtheat_sets.pkl",
        f"{submod_path}individual_sets.pkl",
        f"{submod_path}ind-lt_sets.pkl",
        f"{submod_path}ind-mt_sets.pkl",
        f"{submod_path}ind-ht_sets.pkl",
        f'{out_path}DH.inc',
        f'{out_path}INDUSTRY_DH.inc', f'{out_path}INDUSTRY_DH_VAR_T.inc',
        f'{out_path}INDIVUSERS_DH.inc']
    script:
        f"{modules_path}exo_heat_demand.py"

# 4. Transport Demand
rule format_dkstat_transport_data:
    input:
        [r"Data\Danmarks Statistik\Transportforbrug Type.xlsx",
        f"{modules_path}format_dkstat.py"]
    output:
        f"{data_path}Danmarks Statistik/transport_demand.csv"
    shell:
        """
        python {input[1]} --get-transport-demand --include-bunkering=false
        """
 